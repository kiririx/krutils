name: Create Release

on:
  push:
    branches: [ master ]

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get latest tag
        id: get_latest_tag
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          if [[ $latest_tag == v* ]]; then
            echo "LATEST_TAG=${latest_tag#v}" >> $GITHUB_OUTPUT
          else
            echo "LATEST_TAG=0.0.0" >> $GITHUB_OUTPUT
          fi
      - name: Bump version
        id: bump_version
        run: |
          IFS='.' read -ra VERSION <<< "${{ steps.get_latest_tag.outputs.LATEST_TAG }}"
          MAJOR=${VERSION[0]}
          MINOR=${VERSION[1]}
          PATCH=$((VERSION[2] + 1))
          NEW_TAG="v$MAJOR.$MINOR.$PATCH"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_OUTPUT
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump_version.outputs.NEW_TAG }}
          release_name: Release ${{ steps.bump_version.outputs.NEW_TAG }}
          body: |
            Changes in this Release
            - Auto-generated release
          draft: false
          prerelease: false
